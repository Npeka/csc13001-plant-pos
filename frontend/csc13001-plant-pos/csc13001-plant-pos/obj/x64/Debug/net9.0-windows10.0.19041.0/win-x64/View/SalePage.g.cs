#pragma checksum "G:\GithubRepo\csc13001-plant-pos\frontend\csc13001-plant-pos\csc13001-plant-pos\View\SalePage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "D0E261ACB45B8F1E42F6D7D1470E2E7763137578412697D87EAB59C412ABC92A"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace csc13001_plant_pos.View
{
    partial class SalePage : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Microsoft.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_CommandParameter(global::Microsoft.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.CommandParameter = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Image_Source(global::Microsoft.UI.Xaml.Controls.Image obj, global::Microsoft.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Microsoft.UI.Xaml.Media.ImageSource) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.Source = value;
            }
            public static void Set_Microsoft_UI_Xaml_FrameworkElement_Tag(global::Microsoft.UI.Xaml.FrameworkElement obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Tag = value;
            }
            public static void Set_Microsoft_UI_Xaml_Documents_Run_Text(global::Microsoft.UI.Xaml.Documents.Run obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Control_Background(global::Microsoft.UI.Xaml.Controls.Control obj, global::Microsoft.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Microsoft.UI.Xaml.Media.Brush) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Background = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Control_Foreground(global::Microsoft.UI.Xaml.Controls.Control obj, global::Microsoft.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Microsoft.UI.Xaml.Media.Brush) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Foreground = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class SalePage_obj3_Bindings :
            global::Microsoft.UI.Xaml.IDataTemplateExtension,
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            ISalePage_Bindings
        {
            private global::csc13001_plant_pos.Model.CurrentOrder dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Microsoft.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Microsoft.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj3;
            private global::Microsoft.UI.Xaml.Controls.Button obj4;
            private global::Microsoft.UI.Xaml.Controls.Image obj6;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj7;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj8;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj9;
            private global::Microsoft.UI.Xaml.Controls.Button obj10;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj11;
            private global::Microsoft.UI.Xaml.Controls.Button obj12;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj4CommandParameterDisabled = false;
            private static bool isobj6SourceDisabled = false;
            private static bool isobj7TextDisabled = false;
            private static bool isobj8TextDisabled = false;
            private static bool isobj9TextDisabled = false;
            private static bool isobj10CommandParameterDisabled = false;
            private static bool isobj11TextDisabled = false;
            private static bool isobj12CommandParameterDisabled = false;

            private SalePage_obj3_BindingsTracking bindingsTracking;

            public SalePage_obj3_Bindings()
            {
                this.bindingsTracking = new SalePage_obj3_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 137 && columnNumber == 29)
                {
                    isobj4CommandParameterDisabled = true;
                }
                else if (lineNumber == 88 && columnNumber == 33)
                {
                    isobj6SourceDisabled = true;
                }
                else if (lineNumber == 93 && columnNumber == 37)
                {
                    isobj7TextDisabled = true;
                }
                else if (lineNumber == 98 && columnNumber == 37)
                {
                    isobj8TextDisabled = true;
                }
                else if (lineNumber == 102 && columnNumber == 37)
                {
                    isobj9TextDisabled = true;
                }
                else if (lineNumber == 108 && columnNumber == 41)
                {
                    isobj10CommandParameterDisabled = true;
                }
                else if (lineNumber == 116 && columnNumber == 41)
                {
                    isobj11TextDisabled = true;
                }
                else if (lineNumber == 121 && columnNumber == 41)
                {
                    isobj12CommandParameterDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3: // View\SalePage.xaml line 71
                        this.obj3 = new global::System.WeakReference(global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target));
                        break;
                    case 4: // View\SalePage.xaml line 128
                        this.obj4 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                        break;
                    case 6: // View\SalePage.xaml line 85
                        this.obj6 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                        break;
                    case 7: // View\SalePage.xaml line 90
                        this.obj7 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 8: // View\SalePage.xaml line 95
                        this.obj8 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 9: // View\SalePage.xaml line 99
                        this.obj9 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 10: // View\SalePage.xaml line 104
                        this.obj10 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                        break;
                    case 11: // View\SalePage.xaml line 112
                        this.obj11 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 12: // View\SalePage.xaml line 117
                        this.obj12 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            public void DataContextChangedHandler(global::Microsoft.UI.Xaml.FrameworkElement sender, global::Microsoft.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            var rootElement = (this.obj3.Target as global::Microsoft.UI.Xaml.Controls.StackPanel);
                            if (rootElement != null)
                            {
                                rootElement.DataContextChanged -= this.DataContextChangedHandler;
                            }
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_(global::WinRT.CastExtensions.As<global::csc13001_plant_pos.Model.CurrentOrder>(item), 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // ISalePage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::csc13001_plant_pos.Model.CurrentOrder>(newDataRoot);
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Microsoft.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Microsoft.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Microsoft.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Microsoft.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Microsoft.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Microsoft.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::csc13001_plant_pos.Model.CurrentOrder obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ImageUrl(obj.ImageUrl, phase);
                        this.Update_Name(obj.Name, phase);
                        this.Update_Note(obj.Note, phase);
                        this.Update_Price(obj.Price, phase);
                        this.Update_Quantity(obj.Quantity, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // View\SalePage.xaml line 128
                    if (!isobj4CommandParameterDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_CommandParameter(this.obj4, obj, null);
                    }
                    // View\SalePage.xaml line 104
                    if (!isobj10CommandParameterDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_CommandParameter(this.obj10, obj, null);
                    }
                    // View\SalePage.xaml line 117
                    if (!isobj12CommandParameterDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_CommandParameter(this.obj12, obj, null);
                    }
                }
            }
            private void Update_ImageUrl(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SalePage.xaml line 85
                    if (!isobj6SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Image_Source(this.obj6, (global::Microsoft.UI.Xaml.Media.ImageSource) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.ImageSource), obj), null);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SalePage.xaml line 90
                    if (!isobj7TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj7, obj, null);
                    }
                }
            }
            private void Update_Note(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SalePage.xaml line 95
                    if (!isobj8TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj8, obj, null);
                    }
                }
            }
            private void Update_Price(global::System.Decimal obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SalePage.xaml line 99
                    if (!isobj9TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj9, (global::System.String)this.LookupConverter("CurrencyConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void Update_Quantity(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SalePage.xaml line 112
                    if (!isobj11TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj11, obj.ToString(), null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class SalePage_obj3_BindingsTracking
            {
                private global::System.WeakReference<SalePage_obj3_Bindings> weakRefToBindingObj; 

                public SalePage_obj3_BindingsTracking(SalePage_obj3_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<SalePage_obj3_Bindings>(obj);
                }

                public SalePage_obj3_Bindings TryGetBindingObject()
                {
                    SalePage_obj3_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SalePage_obj3_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::csc13001_plant_pos.Model.CurrentOrder obj = sender as global::csc13001_plant_pos.Model.CurrentOrder;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ImageUrl(obj.ImageUrl, DATA_CHANGED);
                                bindings.Update_Name(obj.Name, DATA_CHANGED);
                                bindings.Update_Note(obj.Note, DATA_CHANGED);
                                bindings.Update_Price(obj.Price, DATA_CHANGED);
                                bindings.Update_Quantity(obj.Quantity, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "ImageUrl":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ImageUrl(obj.ImageUrl, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Name(obj.Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Note":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Note(obj.Note, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Price":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Price(obj.Price, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Quantity":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Quantity(obj.Quantity, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::csc13001_plant_pos.Model.CurrentOrder obj)
                {
                    SalePage_obj3_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class SalePage_obj14_Bindings :
            global::Microsoft.UI.Xaml.IDataTemplateExtension,
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            ISalePage_Bindings
        {
            private global::csc13001_plant_pos.Model.Product dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Microsoft.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Microsoft.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj14;
            private global::Microsoft.UI.Xaml.Controls.Image obj15;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj16;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj17;
            private global::Microsoft.UI.Xaml.Documents.Run obj18;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj14TagDisabled = false;
            private static bool isobj15SourceDisabled = false;
            private static bool isobj16TextDisabled = false;
            private static bool isobj17TextDisabled = false;
            private static bool isobj18TextDisabled = false;

            private SalePage_obj14_BindingsTracking bindingsTracking;

            public SalePage_obj14_Bindings()
            {
                this.bindingsTracking = new SalePage_obj14_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 35 && columnNumber == 17)
                {
                    isobj14TagDisabled = true;
                }
                else if (lineNumber == 47 && columnNumber == 21)
                {
                    isobj15SourceDisabled = true;
                }
                else if (lineNumber == 52 && columnNumber == 25)
                {
                    isobj16TextDisabled = true;
                }
                else if (lineNumber == 60 && columnNumber == 25)
                {
                    isobj17TextDisabled = true;
                }
                else if (lineNumber == 63 && columnNumber == 48)
                {
                    isobj18TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 14: // View\SalePage.xaml line 31
                        this.obj14 = new global::System.WeakReference(global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target));
                        break;
                    case 15: // View\SalePage.xaml line 42
                        this.obj15 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                        break;
                    case 16: // View\SalePage.xaml line 49
                        this.obj16 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 17: // View\SalePage.xaml line 54
                        this.obj17 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 18: // View\SalePage.xaml line 63
                        this.obj18 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Documents.Run>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            public void DataContextChangedHandler(global::Microsoft.UI.Xaml.FrameworkElement sender, global::Microsoft.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            var rootElement = (this.obj14.Target as global::Microsoft.UI.Xaml.Controls.Grid);
                            if (rootElement != null)
                            {
                                rootElement.DataContextChanged -= this.DataContextChangedHandler;
                            }
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_(global::WinRT.CastExtensions.As<global::csc13001_plant_pos.Model.Product>(item), 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // ISalePage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::csc13001_plant_pos.Model.Product>(newDataRoot);
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Microsoft.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Microsoft.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Microsoft.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Microsoft.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Microsoft.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Microsoft.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::csc13001_plant_pos.Model.Product obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ImageUrl(obj.ImageUrl, phase);
                        this.Update_Name(obj.Name, phase);
                        this.Update_SalePrice(obj.SalePrice, phase);
                        this.Update_Stock(obj.Stock, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // View\SalePage.xaml line 31
                    if (!isobj14TagDisabled)
                    {
                        if ((this.obj14.Target as global::Microsoft.UI.Xaml.Controls.Grid) != null)
                        {
                            XamlBindingSetters.Set_Microsoft_UI_Xaml_FrameworkElement_Tag((this.obj14.Target as global::Microsoft.UI.Xaml.Controls.Grid), obj, null);
                        }
                    }
                }
            }
            private void Update_ImageUrl(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SalePage.xaml line 42
                    if (!isobj15SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Image_Source(this.obj15, (global::Microsoft.UI.Xaml.Media.ImageSource) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.ImageSource), obj), null);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SalePage.xaml line 49
                    if (!isobj16TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj16, obj, null);
                    }
                }
            }
            private void Update_SalePrice(global::System.Decimal obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SalePage.xaml line 54
                    if (!isobj17TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj17, (global::System.String)this.LookupConverter("CurrencyConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void Update_Stock(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SalePage.xaml line 63
                    if (!isobj18TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Documents_Run_Text(this.obj18, obj.ToString(), null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class SalePage_obj14_BindingsTracking
            {
                private global::System.WeakReference<SalePage_obj14_Bindings> weakRefToBindingObj; 

                public SalePage_obj14_BindingsTracking(SalePage_obj14_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<SalePage_obj14_Bindings>(obj);
                }

                public SalePage_obj14_Bindings TryGetBindingObject()
                {
                    SalePage_obj14_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SalePage_obj14_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::csc13001_plant_pos.Model.Product obj = sender as global::csc13001_plant_pos.Model.Product;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ImageUrl(obj.ImageUrl, DATA_CHANGED);
                                bindings.Update_Name(obj.Name, DATA_CHANGED);
                                bindings.Update_SalePrice(obj.SalePrice, DATA_CHANGED);
                                bindings.Update_Stock(obj.Stock, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "ImageUrl":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ImageUrl(obj.ImageUrl, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Name(obj.Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SalePrice":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SalePrice(obj.SalePrice, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Stock":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Stock(obj.Stock, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::csc13001_plant_pos.Model.Product obj)
                {
                    SalePage_obj14_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class SalePage_obj20_Bindings :
            global::Microsoft.UI.Xaml.IDataTemplateExtension,
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            ISalePage_Bindings
        {
            private global::csc13001_plant_pos.Model.Category dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Microsoft.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Microsoft.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj20;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj21;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj20BackgroundDisabled = false;
            private static bool isobj20CommandParameterDisabled = false;
            private static bool isobj20ForegroundDisabled = false;
            private static bool isobj21TextDisabled = false;

            private SalePage_obj20_BindingsTracking bindingsTracking;

            public SalePage_obj20_Bindings()
            {
                this.bindingsTracking = new SalePage_obj20_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 17 && columnNumber == 17)
                {
                    isobj20BackgroundDisabled = true;
                }
                else if (lineNumber == 19 && columnNumber == 17)
                {
                    isobj20CommandParameterDisabled = true;
                }
                else if (lineNumber == 22 && columnNumber == 17)
                {
                    isobj20ForegroundDisabled = true;
                }
                else if (lineNumber == 25 && columnNumber == 46)
                {
                    isobj21TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 20: // View\SalePage.xaml line 15
                        this.obj20 = new global::System.WeakReference(global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target));
                        break;
                    case 21: // View\SalePage.xaml line 25
                        this.obj21 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            public void DataContextChangedHandler(global::Microsoft.UI.Xaml.FrameworkElement sender, global::Microsoft.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            var rootElement = (this.obj20.Target as global::Microsoft.UI.Xaml.Controls.Button);
                            if (rootElement != null)
                            {
                                rootElement.DataContextChanged -= this.DataContextChangedHandler;
                            }
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_(global::WinRT.CastExtensions.As<global::csc13001_plant_pos.Model.Category>(item), 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // ISalePage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::csc13001_plant_pos.Model.Category>(newDataRoot);
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Microsoft.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Microsoft.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Microsoft.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Microsoft.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Microsoft.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Microsoft.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::csc13001_plant_pos.Model.Category obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_IsSelected(obj.IsSelected, phase);
                        this.Update_Name(obj.Name, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // View\SalePage.xaml line 15
                    if (!isobj20CommandParameterDisabled)
                    {
                        if ((this.obj20.Target as global::Microsoft.UI.Xaml.Controls.Button) != null)
                        {
                            XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_ButtonBase_CommandParameter((this.obj20.Target as global::Microsoft.UI.Xaml.Controls.Button), obj, null);
                        }
                    }
                }
            }
            private void Update_IsSelected(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SalePage.xaml line 15
                    if (!isobj20BackgroundDisabled)
                    {
                        if ((this.obj20.Target as global::Microsoft.UI.Xaml.Controls.Button) != null)
                        {
                            XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Control_Background((this.obj20.Target as global::Microsoft.UI.Xaml.Controls.Button), (global::Microsoft.UI.Xaml.Media.Brush)this.LookupConverter("BoolToBackgroundConverter").Convert(obj, typeof(global::Microsoft.UI.Xaml.Media.Brush), null, null), null);
                        }
                    }
                    // View\SalePage.xaml line 15
                    if (!isobj20ForegroundDisabled)
                    {
                        if ((this.obj20.Target as global::Microsoft.UI.Xaml.Controls.Button) != null)
                        {
                            XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Control_Foreground((this.obj20.Target as global::Microsoft.UI.Xaml.Controls.Button), (global::Microsoft.UI.Xaml.Media.Brush)this.LookupConverter("BoolToForegroundConverter").Convert(obj, typeof(global::Microsoft.UI.Xaml.Media.Brush), null, null), null);
                        }
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SalePage.xaml line 25
                    if (!isobj21TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj21, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class SalePage_obj20_BindingsTracking
            {
                private global::System.WeakReference<SalePage_obj20_Bindings> weakRefToBindingObj; 

                public SalePage_obj20_BindingsTracking(SalePage_obj20_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<SalePage_obj20_Bindings>(obj);
                }

                public SalePage_obj20_Bindings TryGetBindingObject()
                {
                    SalePage_obj20_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SalePage_obj20_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::csc13001_plant_pos.Model.Category obj = sender as global::csc13001_plant_pos.Model.Category;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_IsSelected(obj.IsSelected, DATA_CHANGED);
                                bindings.Update_Name(obj.Name, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsSelected":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_IsSelected(obj.IsSelected, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Name(obj.Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::csc13001_plant_pos.Model.Category obj)
                {
                    SalePage_obj20_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class SalePage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            ISalePage_Bindings
        {
            private global::csc13001_plant_pos.View.SalePage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Microsoft.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Microsoft.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj23;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj24;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj25;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj26;
            private global::Microsoft.UI.Xaml.Controls.ListView obj27;
            private global::Microsoft.UI.Xaml.Controls.ListView obj28;
            private global::Microsoft.UI.Xaml.Controls.GridView obj29;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj23TextDisabled = false;
            private static bool isobj24TextDisabled = false;
            private static bool isobj25TextDisabled = false;
            private static bool isobj26TextDisabled = false;
            private static bool isobj27ItemsSourceDisabled = false;
            private static bool isobj28ItemsSourceDisabled = false;
            private static bool isobj29ItemsSourceDisabled = false;

            private SalePage_obj1_BindingsTracking bindingsTracking;

            public SalePage_obj1_Bindings()
            {
                this.bindingsTracking = new SalePage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 328 && columnNumber == 25)
                {
                    isobj23TextDisabled = true;
                }
                else if (lineNumber == 307 && columnNumber == 25)
                {
                    isobj24TextDisabled = true;
                }
                else if (lineNumber == 291 && columnNumber == 25)
                {
                    isobj25TextDisabled = true;
                }
                else if (lineNumber == 285 && columnNumber == 29)
                {
                    isobj26TextDisabled = true;
                }
                else if (lineNumber == 260 && columnNumber == 25)
                {
                    isobj27ItemsSourceDisabled = true;
                }
                else if (lineNumber == 177 && columnNumber == 17)
                {
                    isobj28ItemsSourceDisabled = true;
                }
                else if (lineNumber == 196 && columnNumber == 17)
                {
                    isobj29ItemsSourceDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 23: // View\SalePage.xaml line 324
                        this.obj23 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 24: // View\SalePage.xaml line 303
                        this.obj24 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 25: // View\SalePage.xaml line 287
                        this.obj25 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 26: // View\SalePage.xaml line 282
                        this.obj26 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 27: // View\SalePage.xaml line 257
                        this.obj27 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ListView>(target);
                        break;
                    case 28: // View\SalePage.xaml line 174
                        this.obj28 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ListView>(target);
                        break;
                    case 29: // View\SalePage.xaml line 191
                        this.obj29 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.GridView>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // ISalePage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::csc13001_plant_pos.View.SalePage>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Microsoft.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Microsoft.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Microsoft.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Microsoft.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Microsoft.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Microsoft.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::csc13001_plant_pos.View.SalePage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::csc13001_plant_pos.ViewModel.SaleViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Total(obj.Total, phase);
                        this.Update_ViewModel_DiscountAmount(obj.DiscountAmount, phase);
                        this.Update_ViewModel_SubTotal(obj.SubTotal, phase);
                        this.Update_ViewModel_TotalItems(obj.TotalItems, phase);
                        this.Update_ViewModel_CurrentOrders(obj.CurrentOrders, phase);
                        this.Update_ViewModel_Categories(obj.Categories, phase);
                        this.Update_ViewModel_FilteredProducts(obj.FilteredProducts, phase);
                    }
                }
            }
            private void Update_ViewModel_Total(global::System.Decimal obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SalePage.xaml line 324
                    if (!isobj23TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj23, (global::System.String)this.LookupConverter("CurrencyConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void Update_ViewModel_DiscountAmount(global::System.Decimal obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SalePage.xaml line 303
                    if (!isobj24TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj24, (global::System.String)this.LookupConverter("CurrencyConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void Update_ViewModel_SubTotal(global::System.Decimal obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SalePage.xaml line 287
                    if (!isobj25TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj25, (global::System.String)this.LookupConverter("CurrencyConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                }
            }
            private void Update_ViewModel_TotalItems(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SalePage.xaml line 282
                    if (!isobj26TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj26, obj.ToString(), null);
                    }
                }
            }
            private void Update_ViewModel_CurrentOrders(global::System.Collections.ObjectModel.ObservableCollection<global::csc13001_plant_pos.Model.CurrentOrder> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_CurrentOrders(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SalePage.xaml line 257
                    if (!isobj27ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj27, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Categories(global::System.Collections.ObjectModel.ObservableCollection<global::csc13001_plant_pos.Model.Category> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Categories(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SalePage.xaml line 174
                    if (!isobj28ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj28, obj, null);
                    }
                }
            }
            private void Update_ViewModel_FilteredProducts(global::System.Collections.Generic.IEnumerable<global::csc13001_plant_pos.Model.Product> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // View\SalePage.xaml line 191
                    if (!isobj29ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj29, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class SalePage_obj1_BindingsTracking
            {
                private global::System.WeakReference<SalePage_obj1_Bindings> weakRefToBindingObj; 

                public SalePage_obj1_BindingsTracking(SalePage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<SalePage_obj1_Bindings>(obj);
                }

                public SalePage_obj1_Bindings TryGetBindingObject()
                {
                    SalePage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_CurrentOrders(null);
                    UpdateChildListeners_ViewModel_Categories(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SalePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::csc13001_plant_pos.ViewModel.SaleViewModel obj = sender as global::csc13001_plant_pos.ViewModel.SaleViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_Total(obj.Total, DATA_CHANGED);
                                bindings.Update_ViewModel_DiscountAmount(obj.DiscountAmount, DATA_CHANGED);
                                bindings.Update_ViewModel_SubTotal(obj.SubTotal, DATA_CHANGED);
                                bindings.Update_ViewModel_TotalItems(obj.TotalItems, DATA_CHANGED);
                                bindings.Update_ViewModel_CurrentOrders(obj.CurrentOrders, DATA_CHANGED);
                                bindings.Update_ViewModel_Categories(obj.Categories, DATA_CHANGED);
                                bindings.Update_ViewModel_FilteredProducts(obj.FilteredProducts, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Total":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Total(obj.Total, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "DiscountAmount":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_DiscountAmount(obj.DiscountAmount, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SubTotal":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SubTotal(obj.SubTotal, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TotalItems":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_TotalItems(obj.TotalItems, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CurrentOrders":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_CurrentOrders(obj.CurrentOrders, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Categories":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Categories(obj.Categories, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "FilteredProducts":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_FilteredProducts(obj.FilteredProducts, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::csc13001_plant_pos.ViewModel.SaleViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::csc13001_plant_pos.ViewModel.SaleViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_CurrentOrders(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SalePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::csc13001_plant_pos.Model.CurrentOrder> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::csc13001_plant_pos.Model.CurrentOrder>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_CurrentOrders(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    SalePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::csc13001_plant_pos.Model.CurrentOrder> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::csc13001_plant_pos.Model.CurrentOrder>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::csc13001_plant_pos.Model.CurrentOrder> cache_ViewModel_CurrentOrders = null;
                public void UpdateChildListeners_ViewModel_CurrentOrders(global::System.Collections.ObjectModel.ObservableCollection<global::csc13001_plant_pos.Model.CurrentOrder> obj)
                {
                    if (obj != cache_ViewModel_CurrentOrders)
                    {
                        if (cache_ViewModel_CurrentOrders != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_CurrentOrders).PropertyChanged -= PropertyChanged_ViewModel_CurrentOrders;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_CurrentOrders).CollectionChanged -= CollectionChanged_ViewModel_CurrentOrders;
                            cache_ViewModel_CurrentOrders = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_CurrentOrders = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_CurrentOrders;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_CurrentOrders;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Categories(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SalePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::csc13001_plant_pos.Model.Category> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::csc13001_plant_pos.Model.Category>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_Categories(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    SalePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::csc13001_plant_pos.Model.Category> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::csc13001_plant_pos.Model.Category>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::csc13001_plant_pos.Model.Category> cache_ViewModel_Categories = null;
                public void UpdateChildListeners_ViewModel_Categories(global::System.Collections.ObjectModel.ObservableCollection<global::csc13001_plant_pos.Model.Category> obj)
                {
                    if (obj != cache_ViewModel_Categories)
                    {
                        if (cache_ViewModel_Categories != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Categories).PropertyChanged -= PropertyChanged_ViewModel_Categories;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_Categories).CollectionChanged -= CollectionChanged_ViewModel_Categories;
                            cache_ViewModel_Categories = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Categories = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Categories;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_Categories;
                        }
                    }
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 5: // View\SalePage.xaml line 140
                {
                    global::Microsoft.UI.Xaml.Controls.Button element5 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element5).Click += this.NoteButton_Click;
                }
                break;
            case 14: // View\SalePage.xaml line 31
                {
                    global::Microsoft.UI.Xaml.Controls.Grid element14 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Grid)element14).Tapped += this.ProductItem_Tapped;
                }
                break;
            case 22: // View\SalePage.xaml line 160
                {
                    this.PageRoot = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }


        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // View\SalePage.xaml line 2
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    SalePage_obj1_Bindings bindings = new SalePage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 3: // View\SalePage.xaml line 71
                {                    
                    global::Microsoft.UI.Xaml.Controls.StackPanel element3 = (global::Microsoft.UI.Xaml.Controls.StackPanel)target;
                    SalePage_obj3_Bindings bindings = new SalePage_obj3_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element3.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element3.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Microsoft.UI.Xaml.DataTemplate.SetExtensionInstance(element3, bindings);
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element3, bindings);
                }
                break;
            case 14: // View\SalePage.xaml line 31
                {                    
                    global::Microsoft.UI.Xaml.Controls.Grid element14 = (global::Microsoft.UI.Xaml.Controls.Grid)target;
                    SalePage_obj14_Bindings bindings = new SalePage_obj14_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element14.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element14.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Microsoft.UI.Xaml.DataTemplate.SetExtensionInstance(element14, bindings);
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element14, bindings);
                }
                break;
            case 20: // View\SalePage.xaml line 15
                {                    
                    global::Microsoft.UI.Xaml.Controls.Button element20 = (global::Microsoft.UI.Xaml.Controls.Button)target;
                    SalePage_obj20_Bindings bindings = new SalePage_obj20_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element20.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element20.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Microsoft.UI.Xaml.DataTemplate.SetExtensionInstance(element20, bindings);
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element20, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

